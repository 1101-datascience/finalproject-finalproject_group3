traindata$build_year[traindata$build_year == "71"] <- NA
traindata$build_year <- as.integer(traindata$build_year)
# state should be discrete valued between 1 and 4. There is a 33 in it that is cleary a data entry error
traindata$state[traindata$state == 33] <- 3
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
summary(traindata$build_year)
traindata$build_year <- mean(traindata$build_year)
summary(traindata$build_year)
library(data.table)
library(tidyverse)
library(purrr)
library(lubridate)
library(scales)
library(corrplot)
library(DT)
library(ggplot2)
library(dplyr)
# load dataset
traindata = fread('data/train.csv', stringsAsFactors = TRUE)
testdata = fread('data/test.csv', stringsAsFactors = FALSE)
data.macro = fread('data/macro.csv', stringsAsFactors = FALSE)
table(is.na(traindata))
table(is.na(testdata))
table(is.na(data.macro))
miss_pct <- map_dbl(traindata, function(x) { round((sum(is.na(x)) / length(x)) * 100, 1) })
miss_pct <- miss_pct[miss_pct > 0]
data.frame(miss=miss_pct, var=names(miss_pct), row.names=NULL) %>%
ggplot(aes(x=reorder(var, -miss), y=miss)) +
geom_bar(stat='identity', fill='red') +
labs(x='', y='% missing', title='Percent missing data by feature') +
theme(axis.text.x=element_text(angle=90, hjust=1))
# drop those value missing rate > 35%
traindata$hospital_beds_raion <- NULL
traindata$cafe_avg_price_500 <- NULL
traindata$cafe_sum_500_max_price_avg<- NULL
traindata$cafe_sum_500_min_price_avg <-NULL
# drop those lowest variance with the prdict
traindata$culture_objects_top_25_raion <- NULL
traindata$railroad_terminal_raion <- NULL
traindata$build_count_foam <- NULL
traindata$railroad_1line <- NULL
traindata$trc_sqm_500 <- NULL
traindata$cafe_count_500_price_high <- NULL
traindata$leisure_count_500 <- NULL
traindata$trc_sqm_1000 <- NULL
traindata$mosque_count_1000 <- NULL
traindata$mosque_count_1500 <- NULL
traindata$oil_chemistry_raion <- NULL
traindata$nuclear_reactor_raion <- NULL
traindata$big_road1_1line <- NULL
traindata$office_sqm_500 <- NULL
traindata$cafe_count_500_price_4000 <- NULL
traindata$mosque_count_500 <- NULL
traindata$office_sqm_1000 <- NULL
traindata$cafe_count_1000_price_high <- NULL
traindata$cafe_count_1500_price_high <- NULL
traindata$cafe_count_2000_price_high <- NULL
# fix the build_year
traindata$build_year <- as.character(traindata$build_year)
traindata$build_year[traindata$build_year == "20052009"] <- "2005"
traindata$build_year[traindata$build_year == "0"] <- NA
traindata$build_year[traindata$build_year == "1"] <- NA
traindata$build_year[traindata$build_year == "20"] <- "2000"
traindata$build_year[traindata$build_year == "215"] <- "2015"
traindata$build_year[traindata$build_year == "3"] <- NA
traindata$build_year[traindata$build_year == "4965"] <- NA
traindata$build_year[traindata$build_year == "71"] <- NA
traindata$build_year <- as.integer(traindata$build_year)
train$build_year[is.na(traindata$build_year)] <- mean(traindata$build_year, na.rm = TRUE)
traindata$build_year[is.na(traindata$build_year)] <- mean(traindata$build_year, na.rm = TRUE)
summary(traindata$build_year)
# state should be discrete valued between 1 and 4. There is a 33 in it that is cleary a data entry error
traindata$state[traindata$state == 33] <- 3
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# price by area
ggplot(aes(x=full_sq, y=price_doc), data=filter(traindata, full_sq < 2000)) +
geom_point(aes(shape=product_type, colour=product_type, alpha=0.5)) +
labs(x='Area', y='Price', title='Price by area in sq meters')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# price by area
ggplot(aes(x=full_sq, y=price_doc), data=filter(traindata, full_sq < 2000)) +
geom_point(aes(shape=product_type, colour=product_type, alpha=0.5)) +
labs(x='Area', y='Price', title='Price by area in sq meters')
# room count
ggplot(aes(x=num_room), data=traindata) +
geom_histogram(fill='red', bins=20) +
ggtitle('Distribution of room count')
# sales type
ggplot(aes(x=price_doc), data=traindata) +
geom_density(fill='red', color='red') +
facet_grid(~product_type) +
scale_x_continuous(trans='log')
# build year
traindata %>%
filter(build_year > 1691 & build_year < 2018) %>%
ggplot(aes(x=build_year)) +
geom_histogram(fill='red') +
ggtitle('Distribution of build year')
# mean price between build year
traindata$timestamp <- as.Date(traindata$timestamp)
traindata %>%
group_by(timestamp) %>%
summarize(med_price = median(price_doc)) %>%
ggplot(aes(x = timestamp, y = med_price)) +
geom_line(color = 'red') +
geom_smooth(method = 'lm', color = 'grey', alpha = 0.7) +
ggtitle('Daily median price over time')
# variables that are internal to home
corrplot(cor(traindata, use="complete.obs"))
# variables that are internal to home
corTest <- c('sub_area', 'area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata[, ..corTest], use="complete.obs"))
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# variables that are internal to home
corTest <- c('sub_area', 'area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata[, ..corTest], use="complete.obs"))
# variables that are internal to home
corTest <- c('area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata[, ..corTest], use="complete.obs"))
# variables that are internal to home
corTest <- c('price_doc', 'area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata[, ..corTest], use="complete.obs"))
library(data.table)
library(tidyverse)
library(purrr)
library(lubridate)
library(scales)
library(corrplot)
library(DT)
library(ggplot2)
library(dplyr)
# load dataset
traindata = fread('data/train_noNum.csv', stringsAsFactors = TRUE)
testdata = fread('data/test.csv', stringsAsFactors = FALSE)
data.macro = fread('data/macro.csv', stringsAsFactors = FALSE)
table(is.na(traindata))
table(is.na(testdata))
table(is.na(data.macro))
miss_pct <- map_dbl(traindata, function(x) { round((sum(is.na(x)) / length(x)) * 100, 1) })
miss_pct <- miss_pct[miss_pct > 0]
data.frame(miss=miss_pct, var=names(miss_pct), row.names=NULL) %>%
ggplot(aes(x=reorder(var, -miss), y=miss)) +
geom_bar(stat='identity', fill='red') +
labs(x='', y='% missing', title='Percent missing data by feature') +
theme(axis.text.x=element_text(angle=90, hjust=1))
# drop those value missing rate > 35%
traindata$hospital_beds_raion <- NULL
traindata$cafe_avg_price_500 <- NULL
traindata$cafe_sum_500_max_price_avg<- NULL
traindata$cafe_sum_500_min_price_avg <-NULL
# drop those lowest variance with the prdict
traindata$culture_objects_top_25_raion <- NULL
traindata$railroad_terminal_raion <- NULL
traindata$build_count_foam <- NULL
traindata$railroad_1line <- NULL
traindata$trc_sqm_500 <- NULL
traindata$cafe_count_500_price_high <- NULL
traindata$leisure_count_500 <- NULL
traindata$trc_sqm_1000 <- NULL
traindata$mosque_count_1000 <- NULL
traindata$mosque_count_1500 <- NULL
traindata$oil_chemistry_raion <- NULL
traindata$nuclear_reactor_raion <- NULL
traindata$big_road1_1line <- NULL
traindata$office_sqm_500 <- NULL
traindata$cafe_count_500_price_4000 <- NULL
traindata$mosque_count_500 <- NULL
traindata$office_sqm_1000 <- NULL
traindata$cafe_count_1000_price_high <- NULL
traindata$cafe_count_1500_price_high <- NULL
traindata$cafe_count_2000_price_high <- NULL
# fix the build_year
traindata$build_year <- as.character(traindata$build_year)
traindata$build_year[traindata$build_year == "20052009"] <- "2005"
traindata$build_year[traindata$build_year == "0"] <- NA
traindata$build_year[traindata$build_year == "1"] <- NA
traindata$build_year[traindata$build_year == "20"] <- "2000"
traindata$build_year[traindata$build_year == "215"] <- "2015"
traindata$build_year[traindata$build_year == "3"] <- NA
traindata$build_year[traindata$build_year == "4965"] <- NA
traindata$build_year[traindata$build_year == "71"] <- NA
traindata$build_year <- as.integer(traindata$build_year)
# state should be discrete valued between 1 and 4. There is a 33 in it that is cleary a data entry error
traindata$state[traindata$state == 33] <- 3
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# variables that are internal to home
corTest <- c('price_doc', 'area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata, use="complete.obs"))
library(data.table)
library(tidyverse)
library(purrr)
library(lubridate)
library(scales)
library(corrplot)
library(DT)
library(ggplot2)
library(dplyr)
# load dataset
traindata = fread('data/train_noNum.csv', stringsAsFactors = TRUE)
testdata = fread('data/test.csv', stringsAsFactors = FALSE)
data.macro = fread('data/macro.csv', stringsAsFactors = FALSE)
table(is.na(traindata))
table(is.na(testdata))
table(is.na(data.macro))
miss_pct <- map_dbl(traindata, function(x) { round((sum(is.na(x)) / length(x)) * 100, 1) })
miss_pct <- miss_pct[miss_pct > 0]
data.frame(miss=miss_pct, var=names(miss_pct), row.names=NULL) %>%
ggplot(aes(x=reorder(var, -miss), y=miss)) +
geom_bar(stat='identity', fill='red') +
labs(x='', y='% missing', title='Percent missing data by feature') +
theme(axis.text.x=element_text(angle=90, hjust=1))
# drop those value missing rate > 35%
traindata$hospital_beds_raion <- NULL
traindata$cafe_avg_price_500 <- NULL
traindata$cafe_sum_500_max_price_avg<- NULL
traindata$cafe_sum_500_min_price_avg <-NULL
# drop those lowest variance with the prdict
traindata$culture_objects_top_25_raion <- NULL
traindata$railroad_terminal_raion <- NULL
traindata$build_count_foam <- NULL
traindata$railroad_1line <- NULL
traindata$trc_sqm_500 <- NULL
traindata$cafe_count_500_price_high <- NULL
traindata$leisure_count_500 <- NULL
traindata$trc_sqm_1000 <- NULL
traindata$mosque_count_1000 <- NULL
traindata$mosque_count_1500 <- NULL
traindata$oil_chemistry_raion <- NULL
traindata$nuclear_reactor_raion <- NULL
traindata$big_road1_1line <- NULL
traindata$office_sqm_500 <- NULL
traindata$cafe_count_500_price_4000 <- NULL
traindata$mosque_count_500 <- NULL
traindata$office_sqm_1000 <- NULL
traindata$cafe_count_1000_price_high <- NULL
traindata$cafe_count_1500_price_high <- NULL
traindata$cafe_count_2000_price_high <- NULL
# fix the build_year
traindata$build_year <- as.character(traindata$build_year)
traindata$build_year[traindata$build_year == "20052009"] <- "2005"
traindata$build_year[traindata$build_year == "0"] <- NA
traindata$build_year[traindata$build_year == "1"] <- NA
traindata$build_year[traindata$build_year == "20"] <- "2000"
traindata$build_year[traindata$build_year == "215"] <- "2015"
traindata$build_year[traindata$build_year == "3"] <- NA
traindata$build_year[traindata$build_year == "4965"] <- NA
traindata$build_year[traindata$build_year == "71"] <- NA
traindata$build_year <- as.integer(traindata$build_year)
# state should be discrete valued between 1 and 4. There is a 33 in it that is cleary a data entry error
traindata$state[traindata$state == 33] <- 3
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# variables that are internal to home
corTest <- c('price_doc', 'area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata, use="complete.obs"))
library(readr)
train_noNum <- read_csv("data/train_noNum.csv")
View(train_noNum)
as.numeric(traindata)
# load dataset
traindata = fread('data/train_noNum.csv', stringsAsFactors = TRUE)
library(data.table)
library(tidyverse)
library(purrr)
library(lubridate)
library(scales)
library(corrplot)
library(DT)
library(ggplot2)
library(dplyr)
# load dataset
traindata = fread('data/train_noNum.csv', stringsAsFactors = TRUE)
testdata = fread('data/test.csv', stringsAsFactors = FALSE)
data.macro = fread('data/macro.csv', stringsAsFactors = FALSE)
table(is.na(traindata))
table(is.na(testdata))
table(is.na(data.macro))
miss_pct <- map_dbl(traindata, function(x) { round((sum(is.na(x)) / length(x)) * 100, 1) })
miss_pct <- miss_pct[miss_pct > 0]
data.frame(miss=miss_pct, var=names(miss_pct), row.names=NULL) %>%
ggplot(aes(x=reorder(var, -miss), y=miss)) +
geom_bar(stat='identity', fill='red') +
labs(x='', y='% missing', title='Percent missing data by feature') +
theme(axis.text.x=element_text(angle=90, hjust=1))
# drop those value missing rate > 35%
traindata$hospital_beds_raion <- NULL
traindata$cafe_avg_price_500 <- NULL
traindata$cafe_sum_500_max_price_avg<- NULL
traindata$cafe_sum_500_min_price_avg <-NULL
# drop those lowest variance with the prdict
traindata$culture_objects_top_25_raion <- NULL
traindata$railroad_terminal_raion <- NULL
traindata$build_count_foam <- NULL
traindata$railroad_1line <- NULL
traindata$trc_sqm_500 <- NULL
traindata$cafe_count_500_price_high <- NULL
traindata$leisure_count_500 <- NULL
traindata$trc_sqm_1000 <- NULL
traindata$mosque_count_1000 <- NULL
traindata$mosque_count_1500 <- NULL
traindata$oil_chemistry_raion <- NULL
traindata$nuclear_reactor_raion <- NULL
traindata$big_road1_1line <- NULL
traindata$office_sqm_500 <- NULL
traindata$cafe_count_500_price_4000 <- NULL
traindata$mosque_count_500 <- NULL
traindata$office_sqm_1000 <- NULL
traindata$cafe_count_1000_price_high <- NULL
traindata$cafe_count_1500_price_high <- NULL
traindata$cafe_count_2000_price_high <- NULL
# fix the build_year
traindata$build_year <- as.character(traindata$build_year)
traindata$build_year[traindata$build_year == "20052009"] <- "2005"
traindata$build_year[traindata$build_year == "0"] <- NA
traindata$build_year[traindata$build_year == "1"] <- NA
traindata$build_year[traindata$build_year == "20"] <- "2000"
traindata$build_year[traindata$build_year == "215"] <- "2015"
traindata$build_year[traindata$build_year == "3"] <- NA
traindata$build_year[traindata$build_year == "4965"] <- NA
traindata$build_year[traindata$build_year == "71"] <- NA
traindata$build_year <- as.integer(traindata$build_year)
# state should be discrete valued between 1 and 4. There is a 33 in it that is cleary a data entry error
traindata$state[traindata$state == 33] <- 3
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# variables that are internal to home
corTest <- c('price_doc', 'area_m', 'raion_popul', 'green_zone_part', 'indust_part', 'children_preschool'
,'preschool_quota', 'preschool_education_centers_raion', 'children_school', 'school_quota')
corrplot(cor(traindata, use="complete.obs"))
corrplot(cor(traindata))
corrplot(cor(traindata[, 10]))
corrplot(cor(traindata[, 1:10]))
corrplot(cor(traindata[1:10, 1:10]))
corrplot(cor(traindata[1:10, 1:10]+traindata[11:11]))
# variables that are internal to home
cor(traindata)
# variables that are internal to home
cor(traindata[-1], traindata$price_doc)
# variables that are internal to home
cor(traindata[, 1], traindata$price_doc)
# variables that are internal to home
cor(traindata[, 2], traindata$price_doc)
# variables that are internal to home
cor(traindata[, -1], traindata$price_doc)
# variables that are internal to home
corList <- cor(traindata[, -1], traindata$price_doc)
View(corList)
sort(corList, decreasing = TRUE) # 9 8 6 5 3 2
library(data.table)
library(tidyverse)
library(purrr)
library(lubridate)
library(scales)
library(corrplot)
library(DT)
library(ggplot2)
library(dplyr)
# load dataset
traindata = fread('data/train.csv', stringsAsFactors = TRUE)
testdata = fread('data/test.csv', stringsAsFactors = FALSE)
data.macro = fread('data/macro.csv', stringsAsFactors = FALSE)
table(is.na(traindata))
table(is.na(testdata))
table(is.na(data.macro))
miss_pct <- map_dbl(traindata, function(x) { round((sum(is.na(x)) / length(x)) * 100, 1) })
miss_pct <- miss_pct[miss_pct > 0]
data.frame(miss=miss_pct, var=names(miss_pct), row.names=NULL) %>%
ggplot(aes(x=reorder(var, -miss), y=miss)) +
geom_bar(stat='identity', fill='red') +
labs(x='', y='% missing', title='Percent missing data by feature') +
theme(axis.text.x=element_text(angle=90, hjust=1))
# drop those value missing rate > 35%
traindata$hospital_beds_raion <- NULL
traindata$cafe_avg_price_500 <- NULL
traindata$cafe_sum_500_max_price_avg<- NULL
traindata$cafe_sum_500_min_price_avg <-NULL
# drop those lowest variance with the prdict
traindata$culture_objects_top_25_raion <- NULL
traindata$railroad_terminal_raion <- NULL
traindata$build_count_foam <- NULL
traindata$railroad_1line <- NULL
traindata$trc_sqm_500 <- NULL
traindata$cafe_count_500_price_high <- NULL
traindata$leisure_count_500 <- NULL
traindata$trc_sqm_1000 <- NULL
traindata$mosque_count_1000 <- NULL
traindata$mosque_count_1500 <- NULL
traindata$oil_chemistry_raion <- NULL
traindata$nuclear_reactor_raion <- NULL
traindata$big_road1_1line <- NULL
traindata$office_sqm_500 <- NULL
traindata$cafe_count_500_price_4000 <- NULL
traindata$mosque_count_500 <- NULL
traindata$office_sqm_1000 <- NULL
traindata$cafe_count_1000_price_high <- NULL
traindata$cafe_count_1500_price_high <- NULL
traindata$cafe_count_2000_price_high <- NULL
# fix the build_year
traindata$build_year <- as.character(traindata$build_year)
traindata$build_year[traindata$build_year == "20052009"] <- "2005"
traindata$build_year[traindata$build_year == "0"] <- NA
traindata$build_year[traindata$build_year == "1"] <- NA
traindata$build_year[traindata$build_year == "20"] <- "2000"
traindata$build_year[traindata$build_year == "215"] <- "2015"
traindata$build_year[traindata$build_year == "3"] <- NA
traindata$build_year[traindata$build_year == "4965"] <- NA
traindata$build_year[traindata$build_year == "71"] <- NA
traindata$build_year <- as.integer(traindata$build_year)
# state should be discrete valued between 1 and 4. There is a 33 in it that is cleary a data entry error
traindata$state[traindata$state == 33] <- 3
# variables that are internal to home
internal_chars <- c('full_sq', 'life_sq', 'floor', 'max_floor', 'num_room',
'kitch_sq','build_year', 'state', 'price_doc')
corrplot(cor(traindata[, ..internal_chars], use="complete.obs"))
# price by area
ggplot(aes(x=full_sq, y=price_doc), data=filter(traindata, full_sq < 2000)) +
geom_point(aes(shape=product_type, colour=product_type, alpha=0.5)) +
labs(x='Area', y='Price', title='Price by area in sq meters')
# room count
ggplot(aes(x=num_room), data=traindata) +
geom_histogram(fill='red', bins=20) +
ggtitle('Distribution of room count')
# sales type
ggplot(aes(x=price_doc), data=traindata) +
geom_density(fill='red', color='red') +
facet_grid(~product_type) +
scale_x_continuous(trans='log')
# build year
traindata %>%
filter(build_year > 1691 & build_year < 2018) %>%
ggplot(aes(x=build_year)) +
geom_histogram(fill='red') +
ggtitle('Distribution of build year')
# mean price between build year
traindata$timestamp <- as.Date(traindata$timestamp)
traindata %>%
group_by(timestamp) %>%
summarize(med_price = median(price_doc)) %>%
ggplot(aes(x = timestamp, y = med_price)) +
geom_line(color = 'red') +
geom_smooth(method = 'lm', color = 'grey', alpha = 0.7) +
ggtitle('Daily median price over time')
# price by area
ggplot(aes(x=full_sq, y=price_doc), data=filter(traindata, full_sq < 2000)) +
geom_point(aes(shape=product_type, colour=product_type, alpha=0.5)) +
labs(x='Area', y='Price', title='Price by area in sq meters')
# room count
ggplot(aes(x=num_room), data=traindata) +
geom_histogram(fill='red', bins=20) +
ggtitle('Distribution of room count')
# sales type
ggplot(aes(x=price_doc), data=traindata) +
geom_density(fill='red', color='red') +
facet_grid(~product_type) +
scale_x_continuous(trans='log')
# build year
traindata %>%
filter(build_year > 1691 & build_year < 2018) %>%
ggplot(aes(x=build_year)) +
geom_histogram(fill='red') +
ggtitle('Distribution of build year')
# build year
traindata %>%
filter(build_year > 1691 & build_year < 2018) %>%
ggplot(aes(x=build_year)) +
geom_histogram(fill='red') +
ggtitle('Distribution of build year')
# build year
traindata %>%
filter(build_year > 1691 & build_year < 2018) %>%
ggplot(aes(x=build_year)) +
geom_histogram(fill='red', bins=10) +
ggtitle('Distribution of build year')
# mean price between build year
traindata$timestamp <- as.Date(traindata$timestamp)
traindata %>%
group_by(timestamp) %>%
summarize(med_price = median(price_doc)) %>%
ggplot(aes(x = timestamp, y = med_price)) +
geom_line(color = 'red') +
geom_smooth(method = 'lm', color = 'grey', alpha = 0.7) +
ggtitle('Daily median price over time')
write.csv(traindata, "fixTrainData.csv")
library(readr)
macro <- read_csv("data/macro.csv")
View(macro)
